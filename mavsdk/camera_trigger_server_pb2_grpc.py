# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import camera_trigger_server_pb2 as camera__trigger__server_dot_camera__trigger__server__pb2


class CameraTriggerServerServiceStub(object):
    """Provides handling of camera trigger commands.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SubscribeCapture = channel.unary_stream(
                '/mavsdk.rpc.camera_trigger_server.CameraTriggerServerService/SubscribeCapture',
                request_serializer=camera__trigger__server_dot_camera__trigger__server__pb2.SubscribeCaptureRequest.SerializeToString,
                response_deserializer=camera__trigger__server_dot_camera__trigger__server__pb2.CaptureResponse.FromString,
                )


class CameraTriggerServerServiceServicer(object):
    """Provides handling of camera trigger commands.
    """

    def SubscribeCapture(self, request, context):
        """Subscribe to single-capture MAV_CMD_IMAGE_START_CAPTURE commands
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CameraTriggerServerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SubscribeCapture': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeCapture,
                    request_deserializer=camera__trigger__server_dot_camera__trigger__server__pb2.SubscribeCaptureRequest.FromString,
                    response_serializer=camera__trigger__server_dot_camera__trigger__server__pb2.CaptureResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mavsdk.rpc.camera_trigger_server.CameraTriggerServerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CameraTriggerServerService(object):
    """Provides handling of camera trigger commands.
    """

    @staticmethod
    def SubscribeCapture(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/mavsdk.rpc.camera_trigger_server.CameraTriggerServerService/SubscribeCapture',
            camera__trigger__server_dot_camera__trigger__server__pb2.SubscribeCaptureRequest.SerializeToString,
            camera__trigger__server_dot_camera__trigger__server__pb2.CaptureResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
